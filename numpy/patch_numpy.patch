--- numpy/distutils/command/build_ext.py	Tue Aug 11 17:03:43 2015
+++ numpy/distutils/command/build_ext.py	Wed Oct 28 18:56:20 2015
@@ -456,7 +456,9 @@ class build_ext (old_build_ext):
             if libname.startswith('msvc'): continue
             fileexists = False
             for libdir in c_library_dirs or []:
-                libfile = os.path.join(libdir, '%s.lib' % (libname))
+                libfile = os.path.join(libdir,'lib%s.dll.a' % (libname))
+                if not os.path.isfile(libfile):
+                    libfile = os.path.join(libdir,'lib%s.a' % (libname))
                 if os.path.isfile(libfile):
                     fileexists = True
                     break
@@ -494,7 +496,9 @@ class build_ext (old_build_ext):
         for lib in fcompiler.libraries:
             if not lib.startswith('msvc'):
                 c_libraries.append(lib)
-                p = combine_paths(f_lib_dirs, 'lib' + lib + '.a')
+                p = combine_paths(f_lib_dirs, 'lib' + lib + '.dll.a')
+                if not p:
+                    p = combine_paths(f_lib_dirs, 'lib' + lib + '.a')
                 if p:
                     dst_name = os.path.join(self.build_temp, lib + '.lib')
                     if not os.path.isfile(dst_name):
--- numpy/distutils/fcompiler/gnu.py	Sun Sep 13 16:21:27 2015
+++ numpy/distutils/fcompiler/gnu.py	Wed Oct 28 19:00:16 2015
@@ -62,7 +62,7 @@ class GnuFCompiler(FCompiler):
             m = re.search(r'GNU Fortran\s+95.*?([0-9-.]+)', version_string)
             if m:
                 return ('gfortran', m.group(1))
-            m = re.search(r'GNU Fortran.*?\-?([0-9-.]+)', version_string)
+            m = re.search(r'GNU Fortran.*?([0-9]+[-.][0-9]+[-.][0-9]+)', version_string)
             if m:
                 v = m.group(1)
                 if v.startswith('0') or v.startswith('2') or v.startswith('3'):
@@ -344,10 +344,7 @@ class Gnu95FCompiler(GnuFCompiler):
             # XXX: fix this mess, does not work for mingw
             if is_win64():
                 c_compiler = self.c_compiler
-                if c_compiler and c_compiler.compiler_type == "msvc":
-                    return []
-                else:
-                    pass
+                return []
         return opt

     def get_target(self):
--- numpy/distutils/misc_util.py	Tue Aug 11 17:03:43 2015
+++ numpy/distutils/misc_util.py	Wed Oct 28 19:17:49 2015
@@ -397,6 +397,7 @@ def msvc_runtime_library():
                '1400': 'msvcr80',    # MSVC 8
                '1500': 'msvcr90',    # MSVC 9 (VS 2008)
                '1600': 'msvcr100',   # MSVC 10 (aka 2010)
+               '1700': 'msvcr110',   # MSVC 11 (aka 2012)
               }.get(msc_ver, None)
     else:
         lib = None

